<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="42" passed="38">
  <reporter-output>
  </reporter-output>
  <suite name="EmployeeRestAPISuite" duration-ms="8523" started-at="2020-01-15T12:10:59 IST" finished-at="2020-01-15T12:11:08 IST">
    <groups>
    </groups>
    <test name="EmployeesRESTApi" duration-ms="8523" started-at="2020-01-15T12:10:59 IST" finished-at="2020-01-15T12:11:08 IST">
      <class name="com.employeeapi.testcases.TC_002_GetSingleEmployee">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="setup" is-config="true" duration-ms="5" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getEmpData()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="getEmpData" is-config="true" duration-ms="999" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmpData -->
        <test-method status="PASS" signature="CheckContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="CheckContentEncoding" duration-ms="1" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentEncoding -->
        <test-method status="PASS" signature="CheckContentLength()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="CheckContentLength" duration-ms="2" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="PASS" signature="CheckContentType()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="CheckContentType" duration-ms="0" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentType -->
        <test-method status="PASS" signature="CheckCookies()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="CheckCookies" duration-ms="1" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckCookies -->
        <test-method status="PASS" signature="CheckResponseBody()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="CheckResponseBody" duration-ms="1" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method status="FAIL" signature="CheckResponseTime()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="CheckResponseTime" duration-ms="2" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.employeeapi.testcases.TC_002_GetSingleEmployee.CheckResponseTime(TC_002_GetSingleEmployee.java:53)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method status="PASS" signature="CheckServerType()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="CheckServerType" duration-ms="1" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckServerType -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="CheckStatusCode" duration-ms="1" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="CheckStatusLine" duration-ms="1" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:com.employeeapi.testcases.TC_002_GetSingleEmployee@394e1a0f]" name="TearDown" is-config="true" duration-ms="0" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- com.employeeapi.testcases.TC_002_GetSingleEmployee -->
      <class name="com.employeeapi.testcases.TC_003_CreateRecord">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="setup" is-config="true" duration-ms="2" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="CreateEmpData()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="CreateEmpData" is-config="true" duration-ms="1018" started-at="2020-01-15T12:11:03 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateEmpData -->
        <test-method status="PASS" signature="CheckContentLength()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="CheckContentLength" duration-ms="1" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="PASS" signature="CheckContentType()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="CheckContentType" duration-ms="1" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentType -->
        <test-method status="PASS" signature="CheckCookies()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="CheckCookies" duration-ms="1" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckCookies -->
        <test-method status="PASS" signature="CheckResponseBody()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="CheckResponseBody" duration-ms="1" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method status="PASS" signature="CheckResponseTime()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="CheckResponseTime" duration-ms="1" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method status="PASS" signature="CheckServerType()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="CheckServerType" duration-ms="1" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckServerType -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="CheckStatusCode" duration-ms="2" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="CheckStatusLine" duration-ms="1" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:com.employeeapi.testcases.TC_003_CreateRecord@27a5f880]" name="TearDown" is-config="true" duration-ms="1" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- com.employeeapi.testcases.TC_003_CreateRecord -->
      <class name="com.employeeapi.testcases.TC_001_GetAllEmployees">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="setup" is-config="true" duration-ms="91" started-at="2020-01-15T12:10:59 IST" finished-at="2020-01-15T12:10:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getDetails()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="getDetails" is-config="true" duration-ms="2929" started-at="2020-01-15T12:10:59 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDetails -->
        <test-method status="PASS" signature="CheckContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="CheckContentEncoding" duration-ms="7" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentEncoding -->
        <test-method status="PASS" signature="CheckContentLength()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="CheckContentLength" duration-ms="2" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="PASS" signature="CheckContentType()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="CheckContentType" duration-ms="2" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentType -->
        <test-method status="PASS" signature="CheckCookies()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="CheckCookies" duration-ms="2" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckCookies -->
        <test-method status="PASS" signature="CheckResponseBody()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="CheckResponseBody" duration-ms="18" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method status="FAIL" signature="CheckResponseTime()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="CheckResponseTime" duration-ms="3" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.employeeapi.testcases.TC_001_GetAllEmployees.CheckResponseTime(TC_001_GetAllEmployees.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method status="PASS" signature="CheckServerType()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="CheckServerType" duration-ms="1" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckServerType -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="CheckStatusCode" duration-ms="2" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="CheckStatusLine" duration-ms="6" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:com.employeeapi.testcases.TC_001_GetAllEmployees@396f6598]" name="TearDown" is-config="true" duration-ms="0" started-at="2020-01-15T12:11:02 IST" finished-at="2020-01-15T12:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- com.employeeapi.testcases.TC_001_GetAllEmployees -->
      <class name="com.employeeapi.testcases.TC_005_DeleteRecord">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="setup" is-config="true" duration-ms="2" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="DeleteEmpData()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="DeleteEmpData" is-config="true" duration-ms="2307" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteEmpData -->
        <test-method status="PASS" signature="CheckContentLength()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="CheckContentLength" duration-ms="4" started-at="2020-01-15T12:11:08 IST" finished-at="2020-01-15T12:11:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="PASS" signature="CheckContentType()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="CheckContentType" duration-ms="1" started-at="2020-01-15T12:11:08 IST" finished-at="2020-01-15T12:11:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentType -->
        <test-method status="PASS" signature="CheckCookies()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="CheckCookies" duration-ms="1" started-at="2020-01-15T12:11:08 IST" finished-at="2020-01-15T12:11:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckCookies -->
        <test-method status="FAIL" signature="CheckResponseBody()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="CheckResponseBody" duration-ms="1" started-at="2020-01-15T12:11:08 IST" finished-at="2020-01-15T12:11:08 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at com.employeeapi.testcases.TC_005_DeleteRecord.CheckResponseBody(TC_005_DeleteRecord.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method status="PASS" signature="CheckResponseTime()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="CheckResponseTime" duration-ms="2" started-at="2020-01-15T12:11:08 IST" finished-at="2020-01-15T12:11:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method status="PASS" signature="CheckServerType()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="CheckServerType" duration-ms="1" started-at="2020-01-15T12:11:08 IST" finished-at="2020-01-15T12:11:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckServerType -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="CheckStatusCode" duration-ms="1" started-at="2020-01-15T12:11:08 IST" finished-at="2020-01-15T12:11:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="CheckStatusLine" duration-ms="1" started-at="2020-01-15T12:11:08 IST" finished-at="2020-01-15T12:11:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:com.employeeapi.testcases.TC_005_DeleteRecord@5f282abb]" name="TearDown" is-config="true" duration-ms="0" started-at="2020-01-15T12:11:08 IST" finished-at="2020-01-15T12:11:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- com.employeeapi.testcases.TC_005_DeleteRecord -->
      <class name="com.employeeapi.testcases.TC_004_UpdateRecord">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="setup" is-config="true" duration-ms="2" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="UpdateEmpData()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="UpdateEmpData" is-config="true" duration-ms="992" started-at="2020-01-15T12:11:04 IST" finished-at="2020-01-15T12:11:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateEmpData -->
        <test-method status="PASS" signature="CheckContentLength()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="CheckContentLength" duration-ms="1" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentLength -->
        <test-method status="PASS" signature="CheckContentType()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="CheckContentType" duration-ms="1" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckContentType -->
        <test-method status="PASS" signature="CheckCookies()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="CheckCookies" duration-ms="1" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckCookies -->
        <test-method status="FAIL" signature="CheckResponseBody()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="CheckResponseBody" duration-ms="1" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:05 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at com.employeeapi.testcases.TC_004_UpdateRecord.CheckResponseBody(TC_004_UpdateRecord.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method status="PASS" signature="CheckResponseTime()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="CheckResponseTime" duration-ms="4" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method status="PASS" signature="CheckServerType()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="CheckServerType" duration-ms="1" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckServerType -->
        <test-method status="PASS" signature="CheckStatusCode()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="CheckStatusCode" duration-ms="1" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method status="PASS" signature="CheckStatusLine()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="CheckStatusLine" duration-ms="1" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusLine -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:com.employeeapi.testcases.TC_004_UpdateRecord@1d29cf23]" name="TearDown" is-config="true" duration-ms="1" started-at="2020-01-15T12:11:05 IST" finished-at="2020-01-15T12:11:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- com.employeeapi.testcases.TC_004_UpdateRecord -->
    </test> <!-- EmployeesRESTApi -->
  </suite> <!-- EmployeeRestAPISuite -->
</testng-results>
